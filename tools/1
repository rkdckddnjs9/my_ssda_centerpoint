2022-09-01 11:36:42,655   INFO  **********************Start logging**********************
2022-09-01 11:36:42,656   INFO  CUDA_VISIBLE_DEVICES=0,1,2,3
2022-09-01 11:36:42,656   INFO  total_batch_size: 48
2022-09-01 11:36:42,656   INFO  cfg_file         ./cfgs/kitti_models/second_iou.yaml
2022-09-01 11:36:42,656   INFO  batch_size       12
2022-09-01 11:36:42,656   INFO  eval_batch_size  12
2022-09-01 11:36:42,656   INFO  epochs           80
2022-09-01 11:36:42,656   INFO  workers          8
2022-09-01 11:36:42,656   INFO  extra_tag        pretrain_full
2022-09-01 11:36:42,656   INFO  ckpt             None
2022-09-01 11:36:42,656   INFO  pretrained_model None
2022-09-01 11:36:42,656   INFO  launcher         pytorch
2022-09-01 11:36:42,656   INFO  tcp_port         1111
2022-09-01 11:36:42,656   INFO  sync_bn          False
2022-09-01 11:36:42,656   INFO  fix_random_seed  False
2022-09-01 11:36:42,656   INFO  ckpt_save_interval 4
2022-09-01 11:36:42,656   INFO  local_rank       0
2022-09-01 11:36:42,656   INFO  max_ckpt_save_num 30
2022-09-01 11:36:42,657   INFO  merge_all_iters_to_one_epoch False
2022-09-01 11:36:42,657   INFO  set_cfgs         None
2022-09-01 11:36:42,657   INFO  max_waiting_mins 0
2022-09-01 11:36:42,657   INFO  start_epoch      0
2022-09-01 11:36:42,657   INFO  save_to_file     False
2022-09-01 11:36:42,657   INFO  split            train_1.00
2022-09-01 11:36:42,657   INFO  repeat           1
2022-09-01 11:36:42,657   INFO  dbinfos          kitti_dbinfos_train.pkl
2022-09-01 11:36:42,657   INFO  lr               0.0
2022-09-01 11:36:42,657   INFO  cfg.ROOT_DIR: /home/spalab/cwkang/kakao/my_ssda_2
2022-09-01 11:36:42,657   INFO  cfg.LOCAL_RANK: 0
2022-09-01 11:36:42,657   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2022-09-01 11:36:42,657   INFO  
cfg.DATA_CONFIG = edict()
2022-09-01 11:36:42,657   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2022-09-01 11:36:42,657   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2022-09-01 11:36:42,657   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -40, -3, 70.4, 40, 1]
2022-09-01 11:36:42,657   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2022-09-01 11:36:42,657   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train_1.00
2022-09-01 11:36:42,657   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2022-09-01 11:36:42,657   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2022-09-01 11:36:42,658   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2022-09-01 11:36:42,658   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2022-09-01 11:36:42,658   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2022-09-01 11:36:42,658   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2022-09-01 11:36:42,658   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2022-09-01 11:36:42,658   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:20', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': True}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2022-09-01 11:36:42,658   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2022-09-01 11:36:42,658   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2022-09-01 11:36:42,658   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2022-09-01 11:36:42,658   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2022-09-01 11:36:42,658   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.05, 0.05, 0.1], 'MAX_POINTS_PER_VOXEL': 5, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2022-09-01 11:36:42,658   INFO  cfg.DATA_CONFIG.REPEAT: 1
2022-09-01 11:36:42,658   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2022-09-01 11:36:42,658   INFO  
cfg.MODEL = edict()
2022-09-01 11:36:42,658   INFO  cfg.MODEL.NAME: SECONDNetIoU
2022-09-01 11:36:42,658   INFO  
cfg.MODEL.VFE = edict()
2022-09-01 11:36:42,658   INFO  cfg.MODEL.VFE.NAME: MeanVFE
2022-09-01 11:36:42,659   INFO  
cfg.MODEL.BACKBONE_3D = edict()
2022-09-01 11:36:42,659   INFO  cfg.MODEL.BACKBONE_3D.NAME: VoxelBackBone8x
2022-09-01 11:36:42,659   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2022-09-01 11:36:42,659   INFO  cfg.MODEL.MAP_TO_BEV.NAME: HeightCompression
2022-09-01 11:36:42,659   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 256
2022-09-01 11:36:42,659   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2022-09-01 11:36:42,659   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2022-09-01 11:36:42,659   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [5, 5]
2022-09-01 11:36:42,659   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [1, 2]
2022-09-01 11:36:42,659   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [128, 256]
2022-09-01 11:36:42,659   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2]
2022-09-01 11:36:42,659   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [256, 256]
2022-09-01 11:36:42,659   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2022-09-01 11:36:42,659   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2022-09-01 11:36:42,659   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2022-09-01 11:36:42,659   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2022-09-01 11:36:42,659   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2022-09-01 11:36:42,659   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2022-09-01 11:36:42,660   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2022-09-01 11:36:42,660   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 8, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 8, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 8, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2022-09-01 11:36:42,660   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2022-09-01 11:36:42,660   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2022-09-01 11:36:42,660   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2022-09-01 11:36:42,660   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2022-09-01 11:36:42,660   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2022-09-01 11:36:42,660   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2022-09-01 11:36:42,660   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2022-09-01 11:36:42,660   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2022-09-01 11:36:42,660   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2022-09-01 11:36:42,660   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2022-09-01 11:36:42,660   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2022-09-01 11:36:42,660   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2022-09-01 11:36:42,660   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2022-09-01 11:36:42,660   INFO  
cfg.MODEL.ROI_HEAD = edict()
2022-09-01 11:36:42,660   INFO  cfg.MODEL.ROI_HEAD.NAME: SECONDHead
2022-09-01 11:36:42,660   INFO  cfg.MODEL.ROI_HEAD.CLASS_AGNOSTIC: True
2022-09-01 11:36:42,660   INFO  cfg.MODEL.ROI_HEAD.SHARED_FC: [256, 256]
2022-09-01 11:36:42,661   INFO  cfg.MODEL.ROI_HEAD.IOU_FC: [256, 256]
2022-09-01 11:36:42,661   INFO  cfg.MODEL.ROI_HEAD.DP_RATIO: 0.3
2022-09-01 11:36:42,661   INFO  
cfg.MODEL.ROI_HEAD.NMS_CONFIG = edict()
2022-09-01 11:36:42,661   INFO  
cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN = edict()
2022-09-01 11:36:42,661   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_TYPE: nms_gpu
2022-09-01 11:36:42,661   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.MULTI_CLASSES_NMS: False
2022-09-01 11:36:42,661   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_PRE_MAXSIZE: 9000
2022-09-01 11:36:42,661   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_POST_MAXSIZE: 512
2022-09-01 11:36:42,661   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TRAIN.NMS_THRESH: 0.8
2022-09-01 11:36:42,661   INFO  
cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST = edict()
2022-09-01 11:36:42,661   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_TYPE: nms_gpu
2022-09-01 11:36:42,661   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.MULTI_CLASSES_NMS: False
2022-09-01 11:36:42,661   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_PRE_MAXSIZE: 1024
2022-09-01 11:36:42,661   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_POST_MAXSIZE: 100
2022-09-01 11:36:42,661   INFO  cfg.MODEL.ROI_HEAD.NMS_CONFIG.TEST.NMS_THRESH: 0.7
2022-09-01 11:36:42,661   INFO  
cfg.MODEL.ROI_HEAD.ROI_GRID_POOL = edict()
2022-09-01 11:36:42,661   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.GRID_SIZE: 7
2022-09-01 11:36:42,661   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.IN_CHANNEL: 512
2022-09-01 11:36:42,661   INFO  cfg.MODEL.ROI_HEAD.ROI_GRID_POOL.DOWNSAMPLE_RATIO: 8
2022-09-01 11:36:42,661   INFO  
cfg.MODEL.ROI_HEAD.TARGET_CONFIG = edict()
2022-09-01 11:36:42,661   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.BOX_CODER: ResidualCoder
2022-09-01 11:36:42,662   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.ROI_PER_IMAGE: 128
2022-09-01 11:36:42,662   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.FG_RATIO: 0.5
2022-09-01 11:36:42,662   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.SAMPLE_ROI_BY_EACH_CLASS: True
2022-09-01 11:36:42,662   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_SCORE_TYPE: roi_iou
2022-09-01 11:36:42,662   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_FG_THRESH: 0.75
2022-09-01 11:36:42,662   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_BG_THRESH: 0.25
2022-09-01 11:36:42,662   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.CLS_BG_THRESH_LO: 0.1
2022-09-01 11:36:42,662   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.HARD_BG_RATIO: 0.8
2022-09-01 11:36:42,662   INFO  cfg.MODEL.ROI_HEAD.TARGET_CONFIG.REG_FG_THRESH: 0.55
2022-09-01 11:36:42,662   INFO  
cfg.MODEL.ROI_HEAD.LOSS_CONFIG = edict()
2022-09-01 11:36:42,662   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.IOU_LOSS: BinaryCrossEntropy
2022-09-01 11:36:42,662   INFO  
cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2022-09-01 11:36:42,662   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.rcnn_iou_weight: 1.0
2022-09-01 11:36:42,662   INFO  cfg.MODEL.ROI_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2022-09-01 11:36:42,662   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2022-09-01 11:36:42,662   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2022-09-01 11:36:42,662   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2022-09-01 11:36:42,662   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2022-09-01 11:36:42,663   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2022-09-01 11:36:42,663   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2022-09-01 11:36:42,663   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2022-09-01 11:36:42,663   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2022-09-01 11:36:42,663   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2022-09-01 11:36:42,663   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2022-09-01 11:36:42,663   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2022-09-01 11:36:42,663   INFO  
cfg.OPTIMIZATION = edict()
2022-09-01 11:36:42,663   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 12
2022-09-01 11:36:42,663   INFO  cfg.OPTIMIZATION.EVAL_BATCH_SIZE_PER_GPU: 12
2022-09-01 11:36:42,663   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2022-09-01 11:36:42,663   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2022-09-01 11:36:42,663   INFO  cfg.OPTIMIZATION.LR: 0.003
2022-09-01 11:36:42,663   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2022-09-01 11:36:42,663   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2022-09-01 11:36:42,663   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2022-09-01 11:36:42,663   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2022-09-01 11:36:42,663   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2022-09-01 11:36:42,664   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2022-09-01 11:36:42,664   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2022-09-01 11:36:42,664   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2022-09-01 11:36:42,664   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2022-09-01 11:36:42,664   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2022-09-01 11:36:42,664   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2022-09-01 11:36:42,664   INFO  cfg.TAG: second_iou
2022-09-01 11:36:42,664   INFO  cfg.EXP_GROUP_PATH: cfgs/kitti_models
2022-09-01 11:36:42,996   INFO  Database filter by min points Car: 14385 => 13982
2022-09-01 11:36:42,997   INFO  Database filter by min points Pedestrian: 2280 => 2265
2022-09-01 11:36:42,997   INFO  Database filter by min points Cyclist: 893 => 890
2022-09-01 11:36:43,036   INFO  Database filter by difficulty Car: 13982 => 11061
2022-09-01 11:36:43,043   INFO  Database filter by difficulty Pedestrian: 2265 => 2169
2022-09-01 11:36:43,046   INFO  Database filter by difficulty Cyclist: 890 => 606
2022-09-01 11:36:43,176   INFO  Loading KITTI dataset
2022-09-01 11:36:43,327   INFO  Total samples for KITTI dataset: 3712
2022-09-01 11:36:43,599   INFO  DistributedDataParallel(
  (module): SECONDNetIoU(
    (vfe): MeanVFE()
    (backbone_3d): VoxelBackBone8x(
      (conv_input): SparseSequential(
        (0): SubMConv3d()
        (1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
      (conv1): SparseSequential(
        (0): SparseSequential(
          (0): SubMConv3d()
          (1): BatchNorm1d(16, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
      (conv2): SparseSequential(
        (0): SparseSequential(
          (0): SparseConv3d()
          (1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): SparseSequential(
          (0): SubMConv3d()
          (1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): SparseSequential(
          (0): SubMConv3d()
          (1): BatchNorm1d(32, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
      (conv3): SparseSequential(
        (0): SparseSequential(
          (0): SparseConv3d()
          (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): SparseSequential(
          (0): SubMConv3d()
          (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): SparseSequential(
          (0): SubMConv3d()
          (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
      (conv4): SparseSequential(
        (0): SparseSequential(
          (0): SparseConv3d()
          (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): SparseSequential(
          (0): SubMConv3d()
          (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): SparseSequential(
          (0): SubMConv3d()
          (1): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
      (conv_out): SparseSequential(
        (0): SparseConv3d()
        (1): BatchNorm1d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): ReLU()
      )
    )
    (map_to_bev_module): HeightCompression()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(256, 256, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(512, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(512, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(512, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): SECONDHead(
      (proposal_target_layer): ProposalTargetLayer()
      (reg_loss_func): WeightedSmoothL1Loss()
      (shared_fc_layer): Sequential(
        (0): Conv1d(25088, 256, kernel_size=(1,), stride=(1,), bias=False)
        (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
        (3): Dropout(p=0.3, inplace=False)
        (4): Conv1d(256, 256, kernel_size=(1,), stride=(1,), bias=False)
        (5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU()
      )
      (iou_layers): Sequential(
        (0): Conv1d(256, 256, kernel_size=(1,), stride=(1,), bias=False)
        (1): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU()
        (3): Dropout(p=0.3, inplace=False)
        (4): Conv1d(256, 256, kernel_size=(1,), stride=(1,), bias=False)
        (5): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (6): ReLU()
        (7): Conv1d(256, 1, kernel_size=(1,), stride=(1,))
      )
    )
  )
)
2022-09-01 11:36:43,601   INFO  **********************Start training cfgs/kitti_models/second_iou(pretrain_full)**********************
epochs:   0%|          | 0/80 [00:00<?, ?it/s]epochs:   0%|          | 0/80 [00:00<?, ?it/s]epochs:   0%|          | 0/80 [00:00<?, ?it/s]epochs:   0%|          | 0/80 [00:00<?, ?it/s]
train:   0%|          | 0/78 [00:00<?, ?it/s][A/home/spalab/cwkang/kakao/my_ssda_2/pcdet/models/dense_heads/target_assigner/axis_aligned_target_assigner.py:155: UserWarning: This overload of nonzero is deprecated:
	nonzero()
Consider using one of the following signatures instead:
	nonzero(*, bool as_tuple) (Triggered internally at  /pytorch/torch/csrc/utils/python_arg_parser.cpp:882.)
  anchors_with_max_overlap = (anchor_by_gt_overlap == gt_to_anchor_max).nonzero()[:, 0]
/home/spalab/cwkang/kakao/my_ssda_2/pcdet/models/dense_heads/target_assigner/axis_aligned_target_assigner.py:155: UserWarning: This overload of nonzero is deprecated:
	nonzero()
Consider using one of the following signatures instead:
	nonzero(*, bool as_tuple) (Triggered internally at  /pytorch/torch/csrc/utils/python_arg_parser.cpp:882.)
  anchors_with_max_overlap = (anchor_by_gt_overlap == gt_to_anchor_max).nonzero()[:, 0]
/home/spalab/cwkang/kakao/my_ssda_2/pcdet/models/dense_heads/target_assigner/axis_aligned_target_assigner.py:155: UserWarning: This overload of nonzero is deprecated:
	nonzero()
Consider using one of the following signatures instead:
	nonzero(*, bool as_tuple) (Triggered internally at  /pytorch/torch/csrc/utils/python_arg_parser.cpp:882.)
  anchors_with_max_overlap = (anchor_by_gt_overlap == gt_to_anchor_max).nonzero()[:, 0]
/home/spalab/cwkang/kakao/my_ssda_2/pcdet/models/dense_heads/target_assigner/axis_aligned_target_assigner.py:155: UserWarning: This overload of nonzero is deprecated:
	nonzero()
Consider using one of the following signatures instead:
	nonzero(*, bool as_tuple) (Triggered internally at  /pytorch/torch/csrc/utils/python_arg_parser.cpp:882.)
  anchors_with_max_overlap = (anchor_by_gt_overlap == gt_to_anchor_max).nonzero()[:, 0]

train:   1%|1         | 1/78 [00:03<04:25,  3.45s/it][A
train:   1%|1         | 1/78 [00:03<04:25,  3.45s/it, total_it=1][Aepochs:   0%|          | 0/80 [01:34<?, ?it/s, loss=11.7, lr=0.0003]epochs:   0%|          | 0/80 [01:34<?, ?it/s, loss=11.7, lr=0.0003]
train:   3%|2         | 2/78 [00:05<03:08,  2.48s/it, total_it=1][A
train:   3%|2         | 2/78 [00:05<03:08,  2.48s/it, total_it=2][Aepochs:   0%|          | 0/80 [01:36<?, ?it/s, loss=4.21, lr=0.0003]epochs:   0%|          | 0/80 [01:36<?, ?it/s, loss=4.21, lr=0.0003]
train:   4%|3         | 3/78 [00:06<02:38,  2.11s/it, total_it=2][A
train:   4%|3         | 3/78 [00:06<02:38,  2.11s/it, total_it=3][Aepochs:   0%|          | 0/80 [01:38<?, ?it/s, loss=3.47, lr=0.0003]epochs:   0%|          | 0/80 [01:38<?, ?it/s, loss=3.47, lr=0.0003]
train:   5%|5         | 4/78 [00:08<02:22,  1.93s/it, total_it=3][A
train:   5%|5         | 4/78 [00:08<02:22,  1.93s/it, total_it=4][Aepochs:   0%|          | 0/80 [01:39<?, ?it/s, loss=3.09, lr=0.0003]epochs:   0%|          | 0/80 [01:39<?, ?it/s, loss=3.09, lr=0.0003]
train:   6%|6         | 5/78 [00:10<02:15,  1.86s/it, total_it=4][A
train:   6%|6         | 5/78 [00:10<02:15,  1.86s/it, total_it=5][Aepochs:   0%|          | 0/80 [01:41<?, ?it/s, loss=3.01, lr=0.0003]epochs:   0%|          | 0/80 [01:41<?, ?it/s, loss=3.01, lr=0.0003]
train:   8%|7         | 6/78 [00:11<02:08,  1.79s/it, total_it=5][A
train:   8%|7         | 6/78 [00:11<02:08,  1.79s/it, total_it=6][Aepochs:   0%|          | 0/80 [01:43<?, ?it/s, loss=2.93, lr=0.0003]epochs:   0%|          | 0/80 [01:43<?, ?it/s, loss=2.93, lr=0.0003]
train:   9%|8         | 7/78 [00:13<02:05,  1.77s/it, total_it=6][A
train:   9%|8         | 7/78 [00:13<02:05,  1.77s/it, total_it=7][Aepochs:   0%|          | 0/80 [01:44<?, ?it/s, loss=2.6, lr=0.0003] epochs:   0%|          | 0/80 [01:44<?, ?it/s, loss=2.6, lr=0.0003]
train:  10%|#         | 8/78 [00:15<02:02,  1.75s/it, total_it=7][A
train:  10%|#         | 8/78 [00:15<02:02,  1.75s/it, total_it=8][Aepochs:   0%|          | 0/80 [01:46<?, ?it/s, loss=2.63, lr=0.0003]epochs:   0%|          | 0/80 [01:46<?, ?it/s, loss=2.63, lr=0.0003]
train:  12%|#1        | 9/78 [00:17<01:58,  1.72s/it, total_it=8][A
train:  12%|#1        | 9/78 [00:17<01:58,  1.72s/it, total_it=9][Aepochs:   0%|          | 0/80 [01:48<?, ?it/s, loss=2.59, lr=0.0003]epochs:   0%|          | 0/80 [01:48<?, ?it/s, loss=2.59, lr=0.0003]
train:  13%|#2        | 10/78 [00:18<01:57,  1.72s/it, total_it=9][A
train:  13%|#2        | 10/78 [00:18<01:57,  1.72s/it, total_it=10][Aepochs:   0%|          | 0/80 [01:50<?, ?it/s, loss=2.42, lr=0.0003]epochs:   0%|          | 0/80 [01:50<?, ?it/s, loss=2.42, lr=0.0003]
train:  14%|#4        | 11/78 [00:20<01:55,  1.73s/it, total_it=10][A
train:  14%|#4        | 11/78 [00:20<01:55,  1.73s/it, total_it=11][Aepochs:   0%|          | 0/80 [01:51<?, ?it/s, loss=2.45, lr=0.0003]epochs:   0%|          | 0/80 [01:51<?, ?it/s, loss=2.45, lr=0.0003]
train:  15%|#5        | 12/78 [00:22<01:53,  1.73s/it, total_it=11][A
train:  15%|#5        | 12/78 [00:22<01:53,  1.73s/it, total_it=12][Aepochs:   0%|          | 0/80 [01:53<?, ?it/s, loss=2.46, lr=0.0003]epochs:   0%|          | 0/80 [01:53<?, ?it/s, loss=2.46, lr=0.0003]
train:  17%|#6        | 13/78 [00:23<01:52,  1.73s/it, total_it=12][A
train:  17%|#6        | 13/78 [00:23<01:52,  1.73s/it, total_it=13][Aepochs:   0%|          | 0/80 [01:55<?, ?it/s, loss=2.32, lr=0.0003]epochs:   0%|          | 0/80 [01:55<?, ?it/s, loss=2.32, lr=0.0003]
train:  18%|#7        | 14/78 [00:25<01:50,  1.73s/it, total_it=13][A
train:  18%|#7        | 14/78 [00:25<01:50,  1.73s/it, total_it=14][Aepochs:   0%|          | 0/80 [01:56<?, ?it/s, loss=2.27, lr=0.0003]epochs:   0%|          | 0/80 [01:56<?, ?it/s, loss=2.27, lr=0.0003]
train:  19%|#9        | 15/78 [00:27<01:49,  1.73s/it, total_it=14][A
train:  19%|#9        | 15/78 [00:27<01:49,  1.73s/it, total_it=15][Aepochs:   0%|          | 0/80 [01:58<?, ?it/s, loss=2.27, lr=0.0003]epochs:   0%|          | 0/80 [01:58<?, ?it/s, loss=2.27, lr=0.0003]
train:  21%|##        | 16/78 [00:29<01:47,  1.74s/it, total_it=15][A
train:  21%|##        | 16/78 [00:29<01:47,  1.74s/it, total_it=16][Aepochs:   0%|          | 0/80 [02:00<?, ?it/s, loss=2.32, lr=0.0003]epochs:   0%|          | 0/80 [02:00<?, ?it/s, loss=2.32, lr=0.0003]
train:  22%|##1       | 17/78 [00:30<01:45,  1.73s/it, total_it=16][A
train:  22%|##1       | 17/78 [00:30<01:45,  1.73s/it, total_it=17][Aepochs:   0%|          | 0/80 [02:02<?, ?it/s, loss=2.31, lr=0.0003]epochs:   0%|          | 0/80 [02:02<?, ?it/s, loss=2.31, lr=0.0003]
train:  23%|##3       | 18/78 [00:32<01:43,  1.72s/it, total_it=17][A
train:  23%|##3       | 18/78 [00:32<01:43,  1.72s/it, total_it=18][Aepochs:   0%|          | 0/80 [02:03<?, ?it/s, loss=2.12, lr=0.0003]epochs:   0%|          | 0/80 [02:03<?, ?it/s, loss=2.12, lr=0.0003]
train:  24%|##4       | 19/78 [00:34<01:41,  1.73s/it, total_it=18][A
train:  24%|##4       | 19/78 [00:34<01:41,  1.73s/it, total_it=19][Aepochs:   0%|          | 0/80 [02:05<?, ?it/s, loss=2.14, lr=0.0003]epochs:   0%|          | 0/80 [02:05<?, ?it/s, loss=2.14, lr=0.0003]
train:  26%|##5       | 20/78 [00:36<01:40,  1.73s/it, total_it=19][A
train:  26%|##5       | 20/78 [00:36<01:40,  1.73s/it, total_it=20][Aepochs:   0%|          | 0/80 [02:07<?, ?it/s, loss=2.19, lr=0.0003]epochs:   0%|          | 0/80 [02:07<?, ?it/s, loss=2.19, lr=0.0003]
train:  27%|##6       | 21/78 [00:37<01:38,  1.73s/it, total_it=20][A
train:  27%|##6       | 21/78 [00:37<01:38,  1.73s/it, total_it=21][Aepochs:   0%|          | 0/80 [02:09<?, ?it/s, loss=2.13, lr=0.0003]epochs:   0%|          | 0/80 [02:09<?, ?it/s, loss=2.13, lr=0.0003]
train:  28%|##8       | 22/78 [00:39<01:37,  1.74s/it, total_it=21][A
train:  28%|##8       | 22/78 [00:39<01:37,  1.74s/it, total_it=22][Aepochs:   0%|          | 0/80 [02:10<?, ?it/s, loss=2.02, lr=0.0003]epochs:   0%|          | 0/80 [02:10<?, ?it/s, loss=2.02, lr=0.0003]
train:  29%|##9       | 23/78 [00:41<01:35,  1.74s/it, total_it=22][A
train:  29%|##9       | 23/78 [00:41<01:35,  1.74s/it, total_it=23][Aepochs:   0%|          | 0/80 [02:12<?, ?it/s, loss=2.14, lr=0.000301]epochs:   0%|          | 0/80 [02:12<?, ?it/s, loss=2.14, lr=0.000301]
train:  31%|###       | 24/78 [00:43<01:34,  1.75s/it, total_it=23][A
train:  31%|###       | 24/78 [00:43<01:34,  1.75s/it, total_it=24][Aepochs:   0%|          | 0/80 [02:14<?, ?it/s, loss=2.09, lr=0.000301]epochs:   0%|          | 0/80 [02:14<?, ?it/s, loss=2.09, lr=0.000301]
train:  32%|###2      | 25/78 [00:44<01:32,  1.75s/it, total_it=24][A
train:  32%|###2      | 25/78 [00:44<01:32,  1.75s/it, total_it=25][Aepochs:   0%|          | 0/80 [02:16<?, ?it/s, loss=2.16, lr=0.000301]epochs:   0%|          | 0/80 [02:16<?, ?it/s, loss=2.16, lr=0.000301]
train:  33%|###3      | 26/78 [00:46<01:31,  1.76s/it, total_it=25][A
train:  33%|###3      | 26/78 [00:46<01:31,  1.76s/it, total_it=26][Aepochs:   0%|          | 0/80 [02:17<?, ?it/s, loss=2.04, lr=0.000301]epochs:   0%|          | 0/80 [02:17<?, ?it/s, loss=2.04, lr=0.000301]
train:  35%|###4      | 27/78 [00:48<01:30,  1.77s/it, total_it=26][A
train:  35%|###4      | 27/78 [00:48<01:30,  1.77s/it, total_it=27][Aepochs:   0%|          | 0/80 [02:19<?, ?it/s, loss=2.16, lr=0.000301]epochs:   0%|          | 0/80 [02:19<?, ?it/s, loss=2.16, lr=0.000301]
train:  36%|###5      | 28/78 [00:50<01:29,  1.79s/it, total_it=27][A
train:  36%|###5      | 28/78 [00:50<01:29,  1.79s/it, total_it=28][Aepochs:   0%|          | 0/80 [02:21<?, ?it/s, loss=1.97, lr=0.000301]epochs:   0%|          | 0/80 [02:21<?, ?it/s, loss=1.97, lr=0.000301]
train:  37%|###7      | 29/78 [00:52<01:27,  1.80s/it, total_it=28][A
train:  37%|###7      | 29/78 [00:52<01:27,  1.80s/it, total_it=29][Aepochs:   0%|          | 0/80 [02:23<?, ?it/s, loss=2.05, lr=0.000301]epochs:   0%|          | 0/80 [02:23<?, ?it/s, loss=2.05, lr=0.000301]
train:  38%|###8      | 30/78 [00:53<01:27,  1.82s/it, total_it=29][A
train:  38%|###8      | 30/78 [00:53<01:27,  1.82s/it, total_it=30][Aepochs:   0%|          | 0/80 [02:25<?, ?it/s, loss=2.02, lr=0.000301]epochs:   0%|          | 0/80 [02:25<?, ?it/s, loss=2.02, lr=0.000301]
train:  40%|###9      | 31/78 [00:55<01:25,  1.82s/it, total_it=30][A
train:  40%|###9      | 31/78 [00:55<01:25,  1.82s/it, total_it=31][Aepochs:   0%|          | 0/80 [02:27<?, ?it/s, loss=1.99, lr=0.000301]epochs:   0%|          | 0/80 [02:27<?, ?it/s, loss=1.99, lr=0.000301]
train:  41%|####1     | 32/78 [00:57<01:24,  1.84s/it, total_it=31][A
train:  41%|####1     | 32/78 [00:57<01:24,  1.84s/it, total_it=32][Aepochs:   0%|          | 0/80 [02:28<?, ?it/s, loss=1.97, lr=0.000301]epochs:   0%|          | 0/80 [02:28<?, ?it/s, loss=1.97, lr=0.000301]
train:  42%|####2     | 33/78 [00:59<01:23,  1.87s/it, total_it=32][A
train:  42%|####2     | 33/78 [00:59<01:23,  1.87s/it, total_it=33][Aepochs:   0%|          | 0/80 [02:30<?, ?it/s, loss=2.01, lr=0.000301]epochs:   0%|          | 0/80 [02:30<?, ?it/s, loss=2.01, lr=0.000301]
train:  44%|####3     | 34/78 [01:01<01:21,  1.86s/it, total_it=33][A
train:  44%|####3     | 34/78 [01:01<01:21,  1.86s/it, total_it=34][Aepochs:   0%|          | 0/80 [02:32<?, ?it/s, loss=2.04, lr=0.000301]epochs:   0%|          | 0/80 [02:32<?, ?it/s, loss=2.04, lr=0.000301]
train:  45%|####4     | 35/78 [01:03<01:20,  1.87s/it, total_it=34][A
train:  45%|####4     | 35/78 [01:03<01:20,  1.87s/it, total_it=35][Aepochs:   0%|          | 0/80 [02:34<?, ?it/s, loss=1.94, lr=0.000301]epochs:   0%|          | 0/80 [02:34<?, ?it/s, loss=1.94, lr=0.000301]
train:  46%|####6     | 36/78 [01:05<01:18,  1.86s/it, total_it=35][A
train:  46%|####6     | 36/78 [01:05<01:18,  1.86s/it, total_it=36][Aepochs:   0%|          | 0/80 [02:36<?, ?it/s, loss=2, lr=0.000301]   epochs:   0%|          | 0/80 [02:36<?, ?it/s, loss=2, lr=0.000301]
train:  47%|####7     | 37/78 [01:07<01:16,  1.87s/it, total_it=36][A
train:  47%|####7     | 37/78 [01:07<01:16,  1.87s/it, total_it=37][Aepochs:   0%|          | 0/80 [02:38<?, ?it/s, loss=2.04, lr=0.000301]epochs:   0%|          | 0/80 [02:38<?, ?it/s, loss=2.04, lr=0.000301]
train:  49%|####8     | 38/78 [01:08<01:14,  1.87s/it, total_it=37][A
train:  49%|####8     | 38/78 [01:08<01:14,  1.87s/it, total_it=38][Aepochs:   0%|          | 0/80 [02:40<?, ?it/s, loss=1.91, lr=0.000301]epochs:   0%|          | 0/80 [02:40<?, ?it/s, loss=1.91, lr=0.000301]
train:  50%|#####     | 39/78 [01:10<01:13,  1.88s/it, total_it=38][A
train:  50%|#####     | 39/78 [01:10<01:13,  1.88s/it, total_it=39][Aepochs:   0%|          | 0/80 [02:42<?, ?it/s, loss=1.95, lr=0.000302]epochs:   0%|          | 0/80 [02:42<?, ?it/s, loss=1.95, lr=0.000302]
train:  51%|#####1    | 40/78 [01:12<01:11,  1.87s/it, total_it=39][A
train:  51%|#####1    | 40/78 [01:12<01:11,  1.87s/it, total_it=40][Aepochs:   0%|          | 0/80 [02:43<?, ?it/s, loss=1.92, lr=0.000302]epochs:   0%|          | 0/80 [02:43<?, ?it/s, loss=1.92, lr=0.000302]
train:  53%|#####2    | 41/78 [01:14<01:09,  1.87s/it, total_it=40][A
train:  53%|#####2    | 41/78 [01:14<01:09,  1.87s/it, total_it=41][Aepochs:   0%|          | 0/80 [02:45<?, ?it/s, loss=1.93, lr=0.000302]epochs:   0%|          | 0/80 [02:45<?, ?it/s, loss=1.93, lr=0.000302]
train:  54%|#####3    | 42/78 [01:16<01:07,  1.87s/it, total_it=41][A
train:  54%|#####3    | 42/78 [01:16<01:07,  1.87s/it, total_it=42][Aepochs:   0%|          | 0/80 [02:47<?, ?it/s, loss=1.99, lr=0.000302]epochs:   0%|          | 0/80 [02:47<?, ?it/s, loss=1.99, lr=0.000302]
train:  55%|#####5    | 43/78 [01:18<01:05,  1.88s/it, total_it=42][A
train:  55%|#####5    | 43/78 [01:18<01:05,  1.88s/it, total_it=43][Aepochs:   0%|          | 0/80 [02:49<?, ?it/s, loss=1.86, lr=0.000302]epochs:   0%|          | 0/80 [02:49<?, ?it/s, loss=1.86, lr=0.000302]
train:  56%|#####6    | 44/78 [01:20<01:04,  1.89s/it, total_it=43][A
train:  56%|#####6    | 44/78 [01:20<01:04,  1.89s/it, total_it=44][Aepochs:   0%|          | 0/80 [02:51<?, ?it/s, loss=1.92, lr=0.000302]epochs:   0%|          | 0/80 [02:51<?, ?it/s, loss=1.92, lr=0.000302]
train:  58%|#####7    | 45/78 [01:22<01:02,  1.90s/it, total_it=44][A
train:  58%|#####7    | 45/78 [01:22<01:02,  1.90s/it, total_it=45][Aepochs:   0%|          | 0/80 [02:53<?, ?it/s, loss=1.93, lr=0.000302]epochs:   0%|          | 0/80 [02:53<?, ?it/s, loss=1.93, lr=0.000302]
train:  59%|#####8    | 46/78 [01:24<01:00,  1.90s/it, total_it=45][A
train:  59%|#####8    | 46/78 [01:24<01:00,  1.90s/it, total_it=46][Aepochs:   0%|          | 0/80 [02:55<?, ?it/s, loss=1.88, lr=0.000302]epochs:   0%|          | 0/80 [02:55<?, ?it/s, loss=1.88, lr=0.000302]
train:  60%|######    | 47/78 [01:25<00:59,  1.91s/it, total_it=46][A
train:  60%|######    | 47/78 [01:25<00:59,  1.91s/it, total_it=47][Aepochs:   0%|          | 0/80 [02:57<?, ?it/s, loss=1.85, lr=0.000302]epochs:   0%|          | 0/80 [02:57<?, ?it/s, loss=1.85, lr=0.000302]
train:  62%|######1   | 48/78 [01:27<00:57,  1.92s/it, total_it=47][A
train:  62%|######1   | 48/78 [01:27<00:57,  1.92s/it, total_it=48][Aepochs:   0%|          | 0/80 [02:59<?, ?it/s, loss=2.06, lr=0.000302]epochs:   0%|          | 0/80 [02:59<?, ?it/s, loss=2.06, lr=0.000302]Traceback (most recent call last):
  File "/usr/lib/python3.6/runpy.py", line 193, in _run_module_as_main
    "__main__", mod_spec)
  File "/usr/lib/python3.6/runpy.py", line 85, in _run_code
    exec(code, run_globals)
  File "/usr/local/lib/python3.6/dist-packages/torch/distributed/launch.py", line 260, in <module>
    main()
  File "/usr/local/lib/python3.6/dist-packages/torch/distributed/launch.py", line 256, in main
    cmd=cmd)
subprocess.CalledProcessError: Command '['/usr/bin/python3', '-u', 'pretrain.py', '--local_rank=3', '--launcher', 'pytorch', '--cfg_file', './cfgs/kitti_models/second_iou.yaml', '--split', 'train_1.00', '--extra_tag', 'pretrain_full', '--ckpt_save_interval', '4', '--dbinfos', 'kitti_dbinfos_train.pkl', '--tcp_port', '1111']' died with <Signals.SIGTERM: 15>.
/usr/lib/python3.6/multiprocessing/semaphore_tracker.py:143: UserWarning: semaphore_tracker: There appear to be 65 leaked semaphores to clean up at shutdown
  len(cache))
/usr/lib/python3.6/multiprocessing/semaphore_tracker.py:143: UserWarning: semaphore_tracker: There appear to be 65 leaked semaphores to clean up at shutdown
  len(cache))
